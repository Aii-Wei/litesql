/* LiteSQL - Documentation - Changes
 * 
 * By Tero Laitinen 
 * 
 * See LICENSE for copyright information. */

/* \file changes.txt
    Manual */
/** \page changes Changes

\section ver0_3_18 Version 0.3.18
- cleaned up sourcetree and build with cmake (can build and use sqlite3 sources and expat)
- removed internal outdated source copies for expat and sqlite3
- experimental codegenerators for go xorm, protobuf and others
- database backend for sqlite3 in shared library, other database will follow
- working cmake build on linux, osx and windows/ Visual Studio 17

\section ver0_3_17 Version 0.3.17
* fix for #45 license corrected
* fix for #39 MD5 hash bug, UINT4 is now an uint32_t, which should work also correct on 64bit systems
* updated examples
* applied patch #15 without changes for mysql - added protobuf generator
* removed Blob::nil (patch #13)
* parser error fixed for relation::field::values (values inside relations are not parsed before)
* bugfix for #36 fatal error: exampledatabase.hpp: No such file or directory 
* bugfix for #34 Missing constants for values in fields of relations
* applied suggested patch #12 MySQL Connector C /NODEFAULTLIB:LIBCMT 

\section ver0_3_16 Version 0.3.16
- bugfix for #31 "delRelations not called on delete record" 

\section ver0_3_15 Version 0.3.15
- bugfix and extension for blobs

\section ver0_3_14 Version 0.3.14
- bugfix for memory leak on sqlite-backend (https://sourceforge.net/tracker/?func=detail&aid=3531292&group_id=113304&atid=664757) 

\section ver0_3_13 Version 0.3.13

- support for oracle backend (ocilib) 
- database specific datatypes are used (needed for oracle backend)

\section ver0_3_12 Version 0.3.12
- Visual Litesql Link installed in Menu
- fixed error in codegenerator factory map in it on linux
- codegenerator for wxformbuilder added (Initial version)
- autotools support updated

\section ver0_3_11 Version 0.3.11
- support for bigint datatype

\section ver0_3_10 Version 0.3.10
- better gui
- changed memory handling inside model (counted_ptr)
- fixes in autoconf-based build

\section ver0_3_9 Version 0.3.9

- platform-specific build issues fixed
- fix for xml-parser error on method params
- made function parameters on runtime classe const
- usable GUI-Tool (not all features of litesql are supported, 
  ui design could be better, on OSX the gui is terrible layouted )  

\section ver0_3_ 8 Version 0.3.8
- added double as field type for higher precision calculation
- fixed trac ticket #25 (uncatched exceptions on validating model are 
  catched now) 
- Beta for Gui-Tool for editing and generating Code (cross-platform through wxWidgets)

\section ver0_3_7 Version 0.3.7
- fixed error on creating indexes (see trac ticket #23)

\section ver0_3_6 Version 0.3.6
- moved code for loading and storing the model into an own library
- added initial version of a win32 gui for code generation (not ready for production use)

- refactored code generators
- added code generator for ActiveRecord (not ready for production use)
- added multi-target code generation ( multiple -t options)
- added options to litesql-gen for output-directory (--output-dir=)
 
- fixed a bug with postgres on database update 
- fixed a bug: added parsing of index and indexfield tags (was not in the new parser)

\section ver0_3_5 Version 0.3.5
- feature: added <include> tag to generator for including other files 
- feature: added BLOB-support

- bug fix: Ticket #8 	upgrade removes indices 	
- bug fix: Ticket #13 	BLOB-Support for 0.3.x

\section ver0_3_4 Version 0.3.4
- feature: introduced CMake-based build system (used for windows build)
- feature: Installer for Windows (installs Documentation,litesql-gen, libraries and includes) 

- bug fix: Ticket #10 	float with integer default value does not work 	
- bug fix: Ticket #13 	Saving and loading dates
- bug fix: Ticket #9 	SQLite3 - open database (parameters are now separated with ";")

\section ver0_3_3 Version 0.3.3
2008 November 12th
- bug fix: compilation issues fixed with g++ 4.x
- bug fix: postgresql.cpp memory leak fixed
- documentation fix: rowsLeft example and documentation fixed

\section ver0_3_2 Version 0.3.2
2006 January 25th:
- feature: static FieldType-objects for subclasses' id fields are now named Class::Own::Id so that they can be used in template methods
- bug fix: litesql-gen compiles again with g++ 4.0 (explicit template specialization was missing)

2006 January 21th:
- feature: litesql-gen writes static FieldType - objects for subclasses' id fields
- bug fix: litesql-gen wrote broken RelationHandle::del - method. It deleted all rows.
- bug fix: SQLite3-backend transaction reset not needed in case of an error

2006 January 20th:
- bug fix: Date-, DateTime- and Time-fields were broken. 
- bug fix: litesql-gen wrote invalid default values for Date-, DateTime and Time-fields. 
- bug fix: litesql-gen did not reset fields' modified flags when assigning record to object

2006 January 19th:
- bug fix: MySQL 5 does not like names like 'schema' and 'sql'. Internal table is now named to 'schema_' and fields are postfixed with an underscore. This breaks compatibility with databases created with previous versions. 

2006 January 16th:
- bug fix: litesql-gen did not create correct SQL schema for backends with auto incrementing primary key fields (mysql, sqlite3)
- bug fix: SQLite3 - backend did not reset transaction state when error occurred
- litesql-gen writes #ifndef #define #endif - checks to generated header now


2006 January 14th:
- bug fix: litesql-gen did not sort objects of relation tags and this resulted to broken relation table names

2006 January 3rd:
- bug fix: litesql-gen writes explicit template parameters for make_pair now (gcc 2.96 requires it)

2005 December 25th:
- bug fix: all backend transaction routines leaked some memory (fixed by Michel Loiseleur)
- bug fix: litesql-gen crashed when XML file had undefined objects inside relation tag
- litesql-config utility and pkg-config support added (by Eric McDonald)
- bug fix: litesql-gen produced broken table names when using longer name than 31 characters
- bug fix: litesql-gen produced broken SQL (duplicated relation attribute fields in CREATE TABLE - statements)
- RPM packaging headers (by Eric McDonald)
- added .cvsignore - files (by Eric McDonald)
- versioning and packaging improvements (by Eric McDonald)
- litesql-gen : internal restructuring

\section ver0_3_1 Version 0.3.1
- namespace - attribute is required now on (used in litesql-gen)
- relation field type names are now consistent with object field type names (they start with uppercase letter) 
- bug fix: litesql-gen rejected relations with two or more objects with no relation handles (duplicate handle)
- better tests for backend databases to configure.ac (by Eric McDonald) 

\section ver0_3_0 Version 0.3.0
- anonymous enums removed from enumerated field values (in generated code), compiles now with g++-4.0
- Relation::Row-class added, represents rows of relation table
- Relation::getRows-method added, used to access relation rows
- concurrency problem with SQLite3-backend.execute fixed
- few VC++ - compilation issues fixed (by Axel Schmidt)
- Python code generator replaced with C++ - code generator (litesql-gen)
- RelationHandle::getRows-method added, used to access relation rows linked to particular object
- configure-script added (uses autoconf and automake)
- scons dependencies removed
- Python dependencies removed
- debian packaging headers added
- graphviz - target added to litesql-gen
- date-, time-, datetime- and boolean- types added 
\section ver0_2 Version 0.2
- macro hacks removed, XML database definition file and code generator is used now on
- support for n-ary relations (relations that link three or more objects)
- support for relation attributes (ordered relations are now possible)
- set operations: intersect, union_, except
- small changes under the hood
- DataSource-class
\section ver0_1 Version 0.1
- initial version
*/
